{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MCP Server Schema",
  "description": "Schema for validating MCP server markdown files",
  "type": "object",
  "required": [
    "name",
    "display_name",
    "description",
    "category",
    "server_type",
    "protocol_version",
    "security",
    "sources",
    "verification",
    "installation_methods"
  ],
  "properties": {
    "name": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*$",
      "description": "Unique identifier for the MCP server (lowercase, alphanumeric with hyphens)"
    },
    "display_name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50,
      "description": "Human-readable name for the MCP server"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 200,
      "description": "Brief description of what this MCP server does"
    },
    "category": {
      "type": "string",
      "enum": [
        "databases",
        "file-systems",
        "apis",
        "monitoring",
        "development",
        "ai-tools",
        "productivity",
        "web"
      ],
      "description": "Category of the MCP server"
    },
    "server_type": {
      "type": "string",
      "enum": ["stdio", "streaming-http", "websocket"],
      "description": "Type of server connection"
    },
    "protocol_version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "MCP protocol version compatibility"
    },
    "security": {
      "type": "object",
      "required": ["auth_type", "permissions"],
      "properties": {
        "auth_type": {
          "type": "string",
          "enum": ["none", "oauth2", "oauth2.1", "api-key"],
          "description": "Authentication type required"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z]+:[a-z]+$"
          },
          "minItems": 1,
          "description": "List of permissions required"
        },
        "resource_indicators": {
          "type": "boolean",
          "description": "Whether resource indicators are supported"
        },
        "elicitation_schema": {
          "type": ["object", "null"],
          "description": "Schema for context elicitation"
        }
      }
    },
    "sources": {
      "type": "object",
      "properties": {
        "official": {
          "type": "string",
          "description": "Official repository path"
        },
        "docker": {
          "type": "string",
          "description": "Docker image name"
        },
        "npm": {
          "type": "string",
          "description": "NPM package name"
        },
        "marketplace": {
          "type": "object",
          "properties": {
            "smithery": {
              "type": "string",
              "format": "uri"
            },
            "mcpmarket": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "anyOf": [
        {"required": ["official"]},
        {"required": ["docker"]},
        {"required": ["npm"]}
      ]
    },
    "verification": {
      "type": "object",
      "required": ["status", "last_tested", "tested_with"],
      "properties": {
        "status": {
          "type": "string",
          "enum": ["verified", "community", "experimental"],
          "description": "Verification status of the server"
        },
        "last_tested": {
          "type": "string",
          "format": "date",
          "description": "Date when last tested"
        },
        "tested_with": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "List of platforms tested with"
        },
        "security_audit": {
          "type": "boolean",
          "description": "Whether a security audit has been performed"
        }
      }
    },
    "stats": {
      "type": "object",
      "properties": {
        "github_stars": {
          "type": "integer",
          "minimum": 0
        },
        "docker_pulls": {
          "type": "integer",
          "minimum": 0
        },
        "npm_downloads": {
          "type": "integer",
          "minimum": 0
        },
        "last_updated": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "installation_methods": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["docker", "npm", "manual"]
          },
          "recommended": {
            "type": "boolean"
          },
          "command": {
            "type": "string"
          },
          "config_example": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "if": {
              "properties": { "type": { "enum": ["docker", "npm"] } }
            },
            "then": {
              "required": ["command", "config_example"]
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "manual" } }
            },
            "then": {
              "required": ["steps"]
            }
          }
        ]
      }
    },
    "config_schema": {
      "type": "object",
      "description": "JSON Schema for server configuration"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9-]*$"
      },
      "description": "Tags for categorization and search"
    }
  }
}