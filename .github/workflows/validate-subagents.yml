name: Validate Subagents, Commands, and MCP Servers

on:
  push:
    # Run on pushes to any branch
    branches: [ '**' ]
  pull_request:
    paths:
      - 'subagents/*.md'
      - 'commands/*.md'
      - 'mcp-servers/**/*.md'
      - '!README.md'
      - '!CONTRIBUTING.md'
      - '.github/workflows/validate-subagents.yml'
      - 'scripts/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install gray-matter ajv ajv-formats glob chalk
        
    - name: Validate subagents
      run: node scripts/validate-subagents.js
      
    - name: Validate commands
      run: node scripts/validate-commands.js
      
    - name: Validate MCP servers
      run: node scripts/validate-mcp-servers.js
      
    - name: Check for naming inconsistencies
      run: |
        # Check if any subagent files have mismatched names (commands don't have name field)
        for file in subagents/*.md; do
          if [[ -f "$file" ]]; then
            name=$(grep -E "^name:" "$file" | sed 's/name: //')
            basename=$(basename "$file")
            expected="${basename%.md}"
            if [[ "$name" != "$expected" ]]; then
              echo "❌ File $file has name field '$name' but should be '$expected'"
              exit 1
            fi
          fi
        done
        echo "✅ All subagent file names match their name fields"
        
        # Check MCP server files
        for dir in mcp-servers/*/; do
          if [[ -d "$dir" ]]; then
            for file in "$dir"*.md; do
              if [[ -f "$file" && "$file" != *"TEMPLATE.md" ]]; then
                name=$(grep -E "^name:" "$file" | sed 's/name: //')
                basename=$(basename "$file")
                expected="${basename%.md}"
                if [[ "$name" != "$expected" ]]; then
                  echo "❌ File $file has name field '$name' but should be '$expected'"
                  exit 1
                fi
              fi
            done
          fi
        done
        echo "✅ All MCP server file names match their name fields"
        
    - name: Upload validation report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: validation-report.txt